# 🛡️ Guide de Sécurité - L'athanor

## ✅ **ARCHITECTURE SÉCURISÉE IMPLÉMENTÉE**

### **Sécurité par Design :**
- 🛡️ **Server Components** - Accès direct à la base de données côté serveur
- 🔐 **Server Actions** - Actions sécurisées sans exposition de clés  
- 🚫 **Aucune clé publique** - Plus de secrets exposés au navigateur
- ⚡ **APIs protégées** - Endpoints externes verrouillés par clé

## ⚠️ Configuration Minimale Requise

### Variables d'Environnement sur Vercel

Connectez-vous à votre [Dashboard Vercel](https://vercel.com/dashboard) → Projet "athanor" → Settings → Environment Variables :

**Variables OBLIGATOIRES :**
```bash
# 🔐 Clé d'administration (pour APIs externes uniquement)
ADMIN_API_KEY=votre-cle-secrete-tres-longue-et-complexe

# 🗄️ Base de données PostgreSQL (déjà configuré)
DATABASE_URL=postgresql://...

# ☁️ Cloudinary (déjà configuré)
CLOUDINARY_CLOUD_NAME=...
CLOUDINARY_API_KEY=...
CLOUDINARY_API_SECRET=...
```

⚠️ **IMPORTANT:** Plus besoin de `NEXT_PUBLIC_ADMIN_KEY` - c'était dangereux !

### 2. Comment Générer une Clé Sécurisée

Utilisez cette commande pour générer une clé forte :
```bash
# Sur Mac/Linux
openssl rand -base64 32

# Ou utilisez un générateur en ligne :  
# https://generate-random.org/api-key-generator?count=1&length=32&type=mixed-numbers
```

**Exemple de clé forte :**
```
K8mN2pQ7sT9vW4xZ1eR6yU3oI5lA8bC0dF7gH9jM2nP5q
```

## 🛡️ Protections Actives

### 1. Architecture Sécurisée
- ✅ **Server Components** - Données chargées côté serveur uniquement
- ✅ **Server Actions** - Actions exécutées côté serveur sans clés exposées
- ✅ **APIs verrouillées** - Endpoints `/api/admin/*` protégés par clé (usage externe uniquement)
- ✅ **Validation stricte** - Toutes les entrées utilisateur validées

### 2. Protection Upload Renforcée
- ✅ Fichiers PDF uniquement (validation MIME type)
- ✅ Limite de taille : 50MB maximum
- ✅ Noms de fichiers sécurisés (regex strict)
- ✅ Upload direct via Server Action (pas d'API publique)

### 3. Sécurité Base de Données
- ✅ Accès direct Prisma côté serveur uniquement
- ✅ Variables d'environnement sécurisées
- ✅ Connexions PostgreSQL chiffrées
- ✅ Aucune requête depuis le navigateur

## ✅ **ÉTAT ACTUEL : SÉCURISÉ !**

### **Rien à faire - Architecture sécurisée active :**

1. ✅ **Pages admin sécurisées** - Server Components avec accès direct base de données
2. ✅ **Actions protégées** - Server Actions sans exposition de clés
3. ✅ **Upload sécurisé** - Validation complète côté serveur
4. ✅ **APIs verrouillées** - Protection par clé pour usage externe uniquement

### **Optionnel : Supprimer NEXT_PUBLIC_ADMIN_KEY de Vercel**

Si tu l'as déjà ajoutée :
1. Va sur [Vercel Dashboard](https://vercel.com/dashboard) → ton projet
2. Settings → Environment Variables  
3. **Supprime** `NEXT_PUBLIC_ADMIN_KEY` (c'était dangereux)
4. **Garde** seulement `ADMIN_API_KEY` (pour APIs externes)

## 📋 Checklist de Sécurité

- [ ] ✅ Clé API configurée sur Vercel
- [ ] ✅ Site redéployé avec la nouvelle config  
- [ ] ✅ Test d'accès non autorisé (doit échouer)
- [ ] ✅ Test d'accès autorisé (doit réussir)
- [ ] ✅ Pages admin fonctionnelles
- [ ] ✅ Upload protégé

## 🔐 Bonnes Pratiques 

### Ne JAMAIS faire :
- ❌ Partager la clé API publiquement
- ❌ Committer des secrets dans Git
- ❌ Utiliser des mots de passe faibles
- ❌ Exposer des endpoints sensibles

### Toujours faire :
- ✅ Générer des clés longues et complexes
- ✅ Utiliser HTTPS uniquement
- ✅ Monitorer les accès suspects
- ✅ Mettre à jour régulièrement

## 🆘 En Cas de Problème

Si vous pensez que vos clés ont été compromises :

1. **IMMÉDIATEMENT** : Changez `ADMIN_API_KEY` sur Vercel
2. Redéployez le site
3. Vérifiez les logs de Cloudinary et Neon
4. Surveillez les activités suspectes

---

## 📞 Support

Ce guide couvre la sécurité de base. L'athanor est maintenant protégé contre les accès non autorisés !